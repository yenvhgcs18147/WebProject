{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Web\\\\my-app\\\\src\\\\Components\\\\Page\\\\Register\\\\Register.js\";\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\n\nimport * as yup from \"yup\"; // used when validating with a pre-built solution\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userForm = yup.oject().shape({\n  username: yup.string().required(\"Required\").min(8, \"Username too short\").max(32, \"Username too long\"),\n  email: yup.string().required(\"Required\").email(),\n  password: yup.string().required().min(6, \"Password too short\").max(32, \"Username too long\")\n});\n\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: onSubmit,\n      validationSchema: userForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-log\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '100%'\n            },\n            src: \"../IMAGE/Img-log.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              className: \"form-control\",\n              name: \"username\",\n              value: values.username,\n              onChange: handleChange,\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: error,\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              className: \"form-control\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              className: \"form-control\",\n              style: {\n                fontSize: '15px'\n              },\n              name: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-login\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"REGISTER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"LOG IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/xampp/htdocs/Web/my-app/src/Components/Page/Register/Register.js"],"names":["React","useMediaQuery","Formik","EmailValidator","yup","userForm","oject","shape","username","string","required","min","max","email","password","Register","onSubmit","width","handleSubmit","values","handleChange","handleBlur","errors","touched","error","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\r\nimport * as yup from \"yup\"; // used when validating with a pre-built solution\r\n\r\n\r\nconst userForm = yup.oject().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Required\")\r\n        .min(8, \"Username too short\")\r\n        .max(32, \"Username too long\"),\r\n    email: yup\r\n        .string()\r\n        .required(\"Required\")\r\n        .email(),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(6, \"Password too short\")\r\n        .max(32, \"Username too long\"),\r\n});\r\n\r\n\r\nconst Register = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                   username: \"\",\r\n                   email: \"\",\r\n                   password: \"\" \r\n                }}\r\n                onSubmit = {onSubmit}\r\n                validationSchema = {userForm}\r\n            >\r\n            </Formik>\r\n\r\n            <div className=\"wrapper\">\r\n                <div className=\"inner\">\r\n                    <div className=\"img-log\">\r\n                    <img style={{width: '100%'}} src=\"../IMAGE/Img-log.png\" alt=\"\" />\r\n                    </div>\r\n                    <form onSubmit={handleSubmit}>\r\n                    <h1>REGISTER</h1>\r\n                    <div className=\"form-holder\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Username\" \r\n                            className=\"form-control\" \r\n                            name=\"username\" \r\n                            value={values.username}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {errors.email && touched.email && <p className={error}>{errors.email}</p>}\r\n                    </div>\r\n                    <div className=\"form-holder\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Email\" \r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-holder\">\r\n                        <input \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            className=\"form-control\" \r\n                            style={{fontSize: '15px'}} \r\n                            name=\"password\" \r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        \r\n                    </div>\r\n                    <div className=\"form-login\">\r\n                        <button type=\"submit\">REGISTER</button>\r\n                        <button>LOG IN</button>\r\n                    </div>\r\n                    </form>\r\n                </div>     \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}