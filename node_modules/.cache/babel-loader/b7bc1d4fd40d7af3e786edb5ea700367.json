{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Web\\\\my-app\\\\src\\\\Components\\\\Page\\\\Register\\\\Register.js\";\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\n\nimport * as Yup from \"yup\"; // used when validating with a pre-built solution\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  /*#__PURE__*/\n  _jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Register\", values);\n        setSubmitting(false);\n      }, 500);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-log\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '100%'\n            },\n            src: \"../IMAGE/Img-log.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              className: \"form-control\",\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              className: \"form-control\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              className: \"form-control\",\n              style: {\n                fontSize: '15px'\n              },\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-login\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"REGISTER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"LOG IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/xampp/htdocs/Web/my-app/src/Components/Page/Register/Register.js"],"names":["React","useMediaQuery","Formik","EmailValidator","Yup","Register","username","email","password","values","setSubmitting","setTimeout","console","log","width","touched","errors","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\r\nimport * as Yup from \"yup\"; // used when validating with a pre-built solution\r\n\r\nconst Register = () => {\r\n    <Formik\r\n        initialValues={{ username:\"\", email: \"\", password: \"\" }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n            console.log(\"Register\", values);\r\n            setSubmitting(false);\r\n            }, 500);\r\n        }}\r\n    >\r\n    </Formik>\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"inner\">\r\n                    <div className=\"img-log\">\r\n                    <img style={{width: '100%'}} src=\"../IMAGE/Img-log.png\" alt=\"\" />\r\n                    </div>\r\n                    <form action>\r\n                    <h1>REGISTER</h1>\r\n                    <div className=\"form-holder\">\r\n                        <input type=\"text\" placeholder=\"Username\" className=\"form-control\" name=\"username\" />\r\n                        {touched.username && errors.username && <FormHelperText>{errors.username}</FormHelperText>}\r\n                    </div>\r\n                    <div className=\"form-holder\">\r\n                        <input type=\"text\" placeholder=\"Email\" className=\"form-control\" name=\"email\" />\r\n                        {touched.email && errors.email && <FormHelperText>{errors.email}</FormHelperText>}\r\n                    </div>\r\n                    <div className=\"form-holder\">\r\n                        <input type=\"password\" placeholder=\"Password\" className=\"form-control\" style={{fontSize: '15px'}} name=\"password\" />\r\n                        {touched.password && errors.password && <FormHelperText>{errors.password}</FormHelperText>}\r\n                    </div>\r\n                    <div className=\"form-login\">\r\n                        <button type=\"submit\">REGISTER</button>\r\n                        <button type=\"submit\">LOG IN</button>\r\n                    </div>\r\n                    </form>\r\n                </div>     \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}